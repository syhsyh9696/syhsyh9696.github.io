<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>BronyS' Blog</title>
    <description>CS / Ruby / OSU player</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 25 Jan 2017 10:58:30 +0800</pubDate>
    <lastBuildDate>Wed, 25 Jan 2017 10:58:30 +0800</lastBuildDate>
    <generator>Jekyll v3.3.1</generator>
    
      <item>
        <title>原来2017年已经过去这么多了</title>
        <description>&lt;h2 id=&quot;又是新一年&quot;&gt;&lt;strong&gt;又是新一年&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;话说从去年十二月份写过一次之后，好像一个月我都没在打开jekyll生成一片新博客，
又违约了 逃ε=ε=ε=┏(゜ロ゜;)┛&lt;/p&gt;

&lt;p&gt;也是我这段时间实在是没有什么时间写，整本的单词书还有一堆练习等我去啃，摸摸电脑都算奢侈了。
也就这两天稍微轻松那么一点，写了个信息推送的机器人&lt;a href=&quot;https://telegram.me/ujnblogbot&quot;&gt;@ujnblogbot&lt;/a&gt;,
基本就是如果我这些好朋友博客如果有了更新的话，就会在上面给我发一条消息。
整个思路上，是《Ruby Metaprogramming》给了我很大的启发。想用这个服务也很简单啦，
添加一下然后对它发一条’/start’就可以了。&lt;/p&gt;

&lt;p&gt;对了，自从我熟练的使用了HHKB之后，简直就是行云流水一般，爽到生活不能自理，
不过那个Backspace确实很奇葩，我现在笔电上的键盘是彻彻底底不会用了，也是很绝望啊！&lt;/p&gt;

&lt;p&gt;要说还有什么别的成绩的话哈哈哈我又在装逼的道路上前进了好远。有一天早上突发奇想在CU海淘了一台
HP Gen8服务器，等到了我就可以给我的大姐姐们造一个大别墅(NAS)了哈哈哈。
放心，等到了我一定会照一大堆照片装逼的。&lt;/p&gt;

&lt;p&gt;要说最近我还干了什么的话，就是迷上了新垣结衣，整天看日本电视剧。
不过新垣结衣真的很耐看啊！那个真野惠里菜也好萌啊！感觉要把她俩加到大别墅里好好保存了哈哈哈。&lt;/p&gt;

&lt;p&gt;话说HHKB的感受我还没写，Emacs也又一大堆东西需要整理，Ruby还要看好多书，
感觉身体被掏空。这个假还不如不放！&lt;/p&gt;

&lt;p&gt;所以还是脚踏实地一步一步来吧，就这样，万一年前我不再写博客的话，就预祝你&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;鸡年大吉吧&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 24 Jan 2017 16:00:00 +0800</pubDate>
        <link>http://localhost:4000/New-year/</link>
        <guid isPermaLink="true">http://localhost:4000/New-year/</guid>
        
        <category>Daily</category>
        
        
        <category>SYH的自留地</category>
        
      </item>
    
      <item>
        <title>我最后还是选择了HHKB</title>
        <description>&lt;h2 id=&quot;选择hhkb&quot;&gt;&lt;strong&gt;选择HHKB&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;前几天一冲动，在日本亚马逊上购买了HHKB的黑色，
盼星星盼月亮我终于把HHKB盼来了。&lt;/p&gt;

&lt;p&gt;Nippon境内的&lt;strong&gt;&lt;em&gt;佐川急便&lt;/em&gt;&lt;/strong&gt;还是非常快速的，毕竟国家就那么大，
但是&lt;strong&gt;&lt;em&gt;Japan Post&lt;/em&gt;&lt;/strong&gt;的速度就不尽如人意了，当然最慢的还是&lt;strong&gt;&lt;em&gt;EMS&lt;/em&gt;&lt;/strong&gt;。
转运选的&lt;strong&gt;&lt;em&gt;Jshopppers&lt;/em&gt;&lt;/strong&gt;，因为我之前就在他们家注册过，
所以就非常的方便，就不用再重新认证我的个人信息了。&lt;/p&gt;

&lt;p&gt;话说从日本寄到青岛的速度，不知道比青岛到济南的速度快到哪里去了。
而且这个键盘在济南海关和青岛海关各接受了一次查验，居然都没有被税，
去查了一下完税价格发现键盘才80元，原来他们都不屑与收这笔钱，
真是赚到了。&lt;/p&gt;

&lt;p&gt;反正今天第一天用，我觉得这个键盘令人非常的满意，
回弹比红轴略微强那么一点，如果之前是红轴或者青轴的用户，
应该都会很快适应吧。&lt;/p&gt;

&lt;p&gt;最让我开心的事情是，包装内附送了一张HHKB 20周年纪念贴纸，
有点特典的感觉，我准备把它贴在我的电脑上，装逼力Max。&lt;/p&gt;

&lt;p&gt;最近一直都在复习考试科目，我再体验几天，详细体验一下这个键盘，
再回来扯淡把。&lt;/p&gt;

&lt;p&gt;话说这一段时间我好像很久没有看Rails和Ruby元编程了。&lt;/p&gt;
</description>
        <pubDate>Sat, 31 Dec 2016 16:00:00 +0800</pubDate>
        <link>http://localhost:4000/hhkb-keyboard/</link>
        <guid isPermaLink="true">http://localhost:4000/hhkb-keyboard/</guid>
        
        <category>Daily</category>
        
        
        <category>SYH的自留地</category>
        
      </item>
    
      <item>
        <title>历史的进程 - Emacs配置初篇</title>
        <description>&lt;h2 id=&quot;emacs的包管理&quot;&gt;&lt;strong&gt;Emacs的包管理&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;一位一些大家都知道的原因， Emacs的源有一些是不能用的，
如果是在Linux下的话，用proxychains还是可以很方便的，
但是如果是Emacs for windows，这个问题不知道该怎么解决了，除非你用WSL。
所以没办法，换别的源吧&lt;/p&gt;

&lt;p&gt;所谓的包管理，在Emacs里面叫做package mode，
想查看自己目前的packages-list的话，使用组合键 M+x list-packages 可以查看自己现在可用的包
在这个buffer里可以使用C-h m了解更多的操作帮助。&lt;/p&gt;

&lt;p&gt;这个packages-list是从网络上下载下来的，这个下载地址叫做Package Archives，
使用组合键 C-h v package-archives 可以查看这个变量值，默认情况下只有一个源，导致包不是很多。&lt;/p&gt;

&lt;p&gt;为了实现更多的扩展功能我还是要添加更多的Package源，
利用组合键 M-x customize-variable RET package-archives 可以进入到一个新的buffer，
就可以在这个里面添加常用的源了，一般来说，中科大的和清华大学的源都是很好用的，
不过还有一个&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;(“popkit” . “http://elpa.popkit.org/packages/”)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;这个源有的时候也是非常的好用，是以为大陆的Emacs用户个人维护的，有的时候也是非常的快。&lt;/p&gt;

&lt;h2 id=&quot;emacs-theme&quot;&gt;&lt;strong&gt;Emacs Theme&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;在用了几天自带的主题之后，我实在是被自带的mode-line丑的不要不要的，
找了好几天终于发现了一个很对我口味的主题&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Emacs-Dracula https://draculatheme.com/emacs/&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;这个主题配色非常的好看，主要是mode-line不是那么反人类了，写起东西来也变得非常舒服了。&lt;/p&gt;

&lt;p&gt;在我的调教下，Emacs逐渐变得越来越好用了。&lt;/p&gt;
</description>
        <pubDate>Wed, 21 Dec 2016 16:00:00 +0800</pubDate>
        <link>http://localhost:4000/Emacs-chapter_2/</link>
        <guid isPermaLink="true">http://localhost:4000/Emacs-chapter_2/</guid>
        
        <category>Daily</category>
        
        
        <category>SYH的自留地</category>
        
      </item>
    
      <item>
        <title>12月的侃山街</title>
        <description>&lt;h2 id=&quot;osu触盘计划-中期报告&quot;&gt;&lt;strong&gt;OSU!触盘计划-中期报告&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;本来我和&lt;a href=&quot;https://github.com/CocherZhang&quot;&gt;&lt;strong&gt;&lt;em&gt;@Cocher老贼&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;
玩OSU!都是用键盘鼠标的，没想到他居然背叛了组织，并且指法从’标准指法’换成了’兰花指法’,
我和他印PCB做触盘的计划(JiJi盘 project)就彻底泡汤了。&lt;/p&gt;

&lt;p&gt;于是找了一个废旧鼠标的PCB板，加上从淘宝买的cherry轴和试轴器，一个硬盘托架，制作成了一个触盘，
没想到还不错
&lt;img src=&quot;http://7xqbr4.com1.z0.glb.clouddn.com/photo_2016-12-15_22-50-37.jpg&quot; alt=&quot;OSU! Keyboard&quot; /&gt;
就是这个玩意，没错键帽(来自宿舍最凶的男人的C87)就是故意装反的。&lt;/p&gt;

&lt;p&gt;我这个触盘成功通过了我的十万次打击测试，而且稳定性非常感人，触发非常的灵敏，这样就不用天天背着我的键盘了。
话说我那个87键Filco Ninja Majestouch-2真的是沉的我不想再说什么了，
真的比我的X1-Carbon+充电器还沉……&lt;/p&gt;

&lt;p&gt;而且有了这个触盘之后名次已经开始涨上来了，原来玩不好就是怪外设红红火火
&lt;img src=&quot;http://7xqbr4.com1.z0.glb.clouddn.com/2016-12-15-Performance.jpg&quot; alt=&quot;Performance&quot; /&gt;&lt;/p&gt;

&lt;p&gt;以后要是OSU!又厉害的话我肯定会在tag-OSU!更新的。&lt;/p&gt;

&lt;h2 id=&quot;新键盘计划&quot;&gt;&lt;strong&gt;新键盘计划&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;不过最近可能玩的时间就会少很多了，马上要到考试周了，年前还要听母上大人的要求去北京学GRE，也是烦的很啊。
我觉得为了我的腰我觉得我最近可能要再买一把小一点的键盘了，在外地的话我肯定天天背着书包，87真的是太！沉！了！&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Poker(太丑)&lt;/li&gt;
  &lt;li&gt;Filco minila (赤)&lt;/li&gt;
  &lt;li&gt;HHKB (professional-2)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;也就只能从后面两个选一个把，如果真买了的话我一定会在我的自留地装逼的恍恍惚惚。
当然你们如果看了这篇烂文并且有什么意见的话，可以在下面评论，
或者你觉得哪个键盘好一些也可以评论告诉我，如果采用的话我请你吃饭啊红红火火。&lt;/p&gt;

&lt;p&gt;最后祝看我吐槽破文章的人-身体健康，再见。&lt;/p&gt;
</description>
        <pubDate>Thu, 15 Dec 2016 17:00:00 +0800</pubDate>
        <link>http://localhost:4000/OSU!-keyboard/</link>
        <guid isPermaLink="true">http://localhost:4000/OSU!-keyboard/</guid>
        
        <category>Daily</category>
        
        <category>OSU!</category>
        
        
        <category>SYH的自留地</category>
        
      </item>
    
      <item>
        <title>Ruby的集合遍历</title>
        <description>&lt;h2 id=&quot;ruby的遍历方法&quot;&gt;&lt;strong&gt;Ruby的遍历方法&lt;/strong&gt;&lt;/h2&gt; &lt;p&gt;因为最近经常需要用到集合的遍历，看完镐头书(Ruby Programming) 相关章节后总结下常见的方法。&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;em&gt;each&lt;/em&gt;&lt;/strong&gt; 基本上来说就是处于取代了for的作用，当你需要迭代一个集合的时候 each都是可以的选择，而且each比for方便很多&lt;/p&gt; &lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Do something &lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt; &lt;p&gt;&lt;strong&gt;&lt;em&gt;map&lt;/em&gt;&lt;/strong&gt; 和each的作用大概相同，最大的不同就是map会将处理后的结果返回， 省了temp一类的中间变量&lt;/p&gt; &lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Return [2, 4, 6] &lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'a'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'b'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'c'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:upcase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Return ['A', 'B', 'C']&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt; &lt;p&gt;&lt;strong&gt;&lt;em&gt;select&lt;/em&gt;&lt;/strong&gt; 从前向后的迭代计算计算结果为true的元素，当作正向的filter&lt;/p&gt; &lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span...</description>
        <pubDate>Sat, 10 Dec 2016 17:00:00 +0800</pubDate>
        <link>http://localhost:4000/Ruby-traversal/</link>
        <guid isPermaLink="true">http://localhost:4000/Ruby-traversal/</guid>
        
        <category>Ruby</category>
        
        
        <category>Ruby notes</category>
        
      </item>
    
      <item>
        <title>历史的进程 - Emacs学习初篇</title>
        <description>&lt;h2 id=&quot;the-editor-of-gods&quot;&gt;&lt;strong&gt;The Editor of God’s&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Atom.AlwaysBug?()&lt;/p&gt;

&lt;p&gt;Atom又一次抽风了，这一次是如果不外接显示器的话，
它是默认在屏幕显示外面的而且根本拖动不回来。
加之Sublime的输入法漂移，我能怎么办，我也很绝望啊。&lt;/p&gt;

&lt;p&gt;于是，我就打开了在我电脑存放了很长时间的Emacs 25.1-The Editor of God’s。
初次上手Emacs很不习惯，所有的命令都和Ctrl挂钩，而且x1-carbon的ctrl在一个很奇怪的位置。
没过一会Emacs卡的不行，找了半天原因发现原来是Emacs用一种韩文字体显示中文，所以一直在
fallback，导致编辑器变得很卡。&lt;/p&gt;

&lt;p&gt;所以安装好Emacs之后一定要做的 (Windows)&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;更换一个字体&lt;/li&gt;
  &lt;li&gt;更换ctrl和capslock(如果你的手不想疼的话)&lt;/li&gt;
  &lt;li&gt;如果用WSL的话，在’.bashrc’或者’.zshrc’加上这么一条 alias vim=’emacs’(心无旁骛 逃&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;因为很看好在Emacs下可以收发邮件，所以在vim和Emacs中选择了Emacs，等看完所有的教程再
写一篇常用的命令集合，命令太多了根本记不住。&lt;/p&gt;

</description>
        <pubDate>Sat, 10 Dec 2016 16:00:00 +0800</pubDate>
        <link>http://localhost:4000/Emacs-chapter_1/</link>
        <guid isPermaLink="true">http://localhost:4000/Emacs-chapter_1/</guid>
        
        <category>Daily</category>
        
        
        <category>SYH的自留地</category>
        
      </item>
    
      <item>
        <title>Ruby神教徒自吹</title>
        <description>&lt;h2 id=&quot;ruby编程有感&quot;&gt;&lt;strong&gt;Ruby编程有感&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;又到了吹Ruby的季节了，看完了Ruby的语法介绍加上1/4的Ruby元编程，感觉原来还可以这么优雅的搞自己
那些玩具程序。用代码生成代码，面向对象更加的纯粹，这一切真的是太棒了。&lt;/p&gt;

&lt;p&gt;就拿Ruby的IO类来说吧，无论是Socket类还是RS232接口的相关gem，很多都是从IO类继承过来的，所有的
IO类的方法都可以无缝衔接，比如今天写Socket相关应用的时候&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;TCPServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;22000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;accept&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;gets&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;puts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ctime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;写出这些完全不用看Rdocs，都是凭着感觉写出来的没有任何问题。同样的Ruby操作Linux下/dev的设备的时
，有的方法也是完全共通的。万物皆对象这是我最喜欢的。&lt;/p&gt;

&lt;p&gt;最后再牢骚两句，Ruby在web方面和一些直接操作硬件的方面造诣真的挺深的，OOP也更纯粹，所谓的性能不足在现在来说根本就不是问题，不要总是拿C#或者Java这种高级武器去面对几百行解决的问题，杀鸡焉用牛刀？&lt;/p&gt;

&lt;p&gt;也是因为ujn-electromagneticlock-ruby这个项目，从被喷的狗屁不如到现在基本功能基本完善和相关
模块不断增加，我觉得这个过程中我也学到了不少。喷稳定性我加了不少稳定性的方法，喷数据不稳定便链接
到远端的服务器等等，反正我做出过什么东西从来都是在被喷中不断完善也早就习惯了。同样也要感谢@WangSq
花了那么多时间给我做硬件那块。&lt;/p&gt;

&lt;p&gt;下一步我抽一点时间写学一部分关于ROR的相关知识争取搞一套实验室的信息综合分发网站一类的吧，让实验室变得
智能化一点，要不实在是太Low了。&lt;/p&gt;

&lt;p&gt;还有就是好想买手办啊 东条希 松浦果南 星空凛 南琴梨 还有Filco minila air，是时候攒钱了。&lt;/p&gt;

&lt;p&gt;最后&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Ruby&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Think elegant.&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Tue, 06 Dec 2016 16:00:00 +0800</pubDate>
        <link>http://localhost:4000/Ruby-now/</link>
        <guid isPermaLink="true">http://localhost:4000/Ruby-now/</guid>
        
        <category>Ruby</category>
        
        
        <category>SYH的自留地</category>
        
      </item>
    
      <item>
        <title>Linode-Tokyo2 购入!</title>
        <description>&lt;h2 id=&quot;bandwagon--linode-tokyo2&quot;&gt;&lt;strong&gt;Bandwagon =&amp;gt; Linode-Tokyo2&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;这个月的Bandwagon真是抽风的厉害，晚上在实验室什么也干不成，而且已经续费了十四个月马上到期，这是前提。&lt;/p&gt;

&lt;p&gt;于是我就比对了一下周围近一些的提供商&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;提供商&lt;/th&gt;
      &lt;th&gt;位置&lt;/th&gt;
      &lt;th&gt;优点&lt;/th&gt;
      &lt;th&gt;缺点&lt;/th&gt;
      &lt;th&gt;价格&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Bandwagon&lt;/td&gt;
      &lt;td&gt;US&lt;/td&gt;
      &lt;td&gt;特别便宜&lt;/td&gt;
      &lt;td&gt;超售!晚上爆炸&lt;/td&gt;
      &lt;td&gt;M:2.99$ Y:19.99$&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Vultr&lt;/td&gt;
      &lt;td&gt;JP SG&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;便宜 活动多&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;买的人多线路爆炸&lt;/td&gt;
      &lt;td&gt;全是活动没法算价格&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Linode&lt;/td&gt;
      &lt;td&gt;JP SG&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;快&lt;/strong&gt; 稳定 管理强&lt;/td&gt;
      &lt;td&gt;贵! 也是NTT线路&lt;/td&gt;
      &lt;td&gt;M:10$ Y:120$&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;当看完这几家后，我觉得Vultr强!无敌!就是它了，然后就打开了Speedtest，然后就没有然后了，因为实在是太慢了，
和B家一样人太多线路太繁忙，于是作罢。&lt;/p&gt;

&lt;p&gt;转念一想，和我一起租用VPS的都是高富帅，我们为什么不搞一个高富帅主机呢？就决定是你了Linode!
Linode-Tokyo1机房早就变成传家宝了，价格高的无法接受，退而求其次，Linode-Tokyo2也是不错的选择。&lt;/p&gt;

&lt;p&gt;Linode-Tokyo2的配置
1-CORE|2GB-RAM|24GB-STORTAGE|2TB-TRANSFER&lt;/p&gt;

&lt;h2 id=&quot;配置方法&quot;&gt;&lt;strong&gt;配置方法&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;不安装锐速的话，四个人是一定不能用的，所以安装好CentOS 7和Shadowsocks后第一件事情就是安装锐速&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;wget -N --no-check-certificate https://raw.githubusercontent.com/91yun/serverspeeder/master/serverspeeder-all.sh &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; bash serverspeeder-all.sh&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;如果内核是在&lt;a href=&quot;https://www.91yun.org/wp-content/plugins/91yun-serverspeeder/systemlist.html&quot;&gt;支持的内核&lt;/a&gt;里面的话，
执行上一步就可以了，然而我的内核并不是受到支持的，需要更换VPS的内核。
这个时候就要请出Linode的后台管理了 强!无敌! 在管理页面里更换成受支持的内核就可以了，锐速一开在Youtube上看1440P的视频都没有问题了。&lt;/p&gt;

&lt;h2 id=&quot;依旧存在的问题&quot;&gt;&lt;strong&gt;依旧存在的问题&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Linode-Tokyo2机房是刚开的，IP是刚广播的，APNIC的数据库还没更新，所以显示的地址还是SG&lt;/p&gt;

&lt;p&gt;再就是Ping值有时候还是高，到了200ms，一般在130ms，希望以后的线路优化能好点，毕竟老牌大厂。&lt;/p&gt;

&lt;p&gt;现在，可以静静看着那些用着Bandwagon的那些人了。&lt;/p&gt;
</description>
        <pubDate>Thu, 01 Dec 2016 20:00:00 +0800</pubDate>
        <link>http://localhost:4000/Daily-VPS/</link>
        <guid isPermaLink="true">http://localhost:4000/Daily-VPS/</guid>
        
        <category>VPS</category>
        
        
        <category>折腾纪实</category>
        
      </item>
    
      <item>
        <title>第第第第一篇</title>
        <description>&lt;h2 id=&quot;hexo--jekyll&quot;&gt;&lt;strong&gt;HEXO =&amp;gt; JEKYLL&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;终于搞定了，再再再一次换了Blog框架，这次我保证，一个星期怎么着也会有一篇的
JEKYLL是ruby写的，我上面的环境啊它好的很啊，就是WSL有点小问题，HEXO就栽在了上面。&lt;/p&gt;

&lt;p&gt;如果想在自己的电脑上预览的话，执行&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;jekyll s --no-watch&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;最后的最后，我只想说：ruby不知道比python那一套高到哪里去了 (逃&lt;/p&gt;
</description>
        <pubDate>Tue, 13 Sep 2016 09:00:00 +0800</pubDate>
        <link>http://localhost:4000/new-blog-is-awesome/</link>
        <guid isPermaLink="true">http://localhost:4000/new-blog-is-awesome/</guid>
        
        <category>Daily</category>
        
        
        <category>SYH的自留地</category>
        
      </item>
    
  </channel>
</rss>
